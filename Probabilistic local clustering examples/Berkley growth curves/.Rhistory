library(ProbKMA.package)
require(fda)
cer <- function(P,Q){
# classification error rate (0=perfect agree 1=complete disagreement)
if(length(P)!=length(Q)){stop('le due partizioni devono avere la stessa lunghezza')}
cer.comp <- 0
for(i in 1:(length(P)-1))
for(j in (i+1):length(P))
cer.comp <- cer.comp + abs((P[i]==P[j])-(Q[i]==Q[j]))
cer.comp <- cer.comp/choose(length(P),2)
return(cer.comp)
}
# Set working directory to the folder of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("growth_smoothed.RData")
to_matrix <- function(y0){
return(as.matrix(y0))
}
Y0=lapply(Y0,to_matrix)
Y1=lapply(Y1,to_matrix)
c_min <- 101 # minimum motif length (entire curves)
# Try 10 different initializations, select the best clustering
J_d1 <- rep(NA, 10)
probKMA_results_d1_all <- vector('list', 10)
for(i in 1:10){
probKMA_results_d1_all[[i]] <- ProbKMA.package::probKMA(Y0 = Y0, Y1 = Y1, K = 2, c = c_min, c_max = c_min, diss = 'd1_L2', iter4clean=1000, alpha = 1,worker_number = 1)
J_d1[i] <- probKMA_results_d1_all[[i]]$J_iter[probKMA_results_d1_all[[i]]$iter]
}
