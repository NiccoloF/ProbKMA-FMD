return_options = TRUE, return_init = TRUE,
diss = diss, alpha = alpha),
plot = FALSE, worker_number = NULL))
save(find_candidate_motifs_results, file = './results/len200_sd0.1_candidate.RData')
}
# load library
library(ProbKMA.package)
# set seed
seed = 123
set.seed(seed)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0.2
trials_elong = 201
c_max = 71
K = 3
c = 61
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
# load library
library(ProbKMA.package)
# set seed
seed = 123
set.seed(seed)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0.2
trials_elong = 201
c_max = 71
K = 3
c = 41
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
warnings()
# load library
library(ProbKMA.package)
# set seed
seed = 123
set.seed(seed)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0.2
trials_elong = 201
c_max = 71
K = 3
c = 41
# load previous R implementation source file
# warning: for comparing the results reload all the data and clean the envir
source(file = "../probKMA-FMD_functions.r")
true_output = probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
warnings()
# load library
library(ProbKMA.package)
# set seed
seed = 123
set.seed(seed)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 201
c_max = 71
K = 3
c = 41
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
output_vectors <- my_output
save(output_vectors, file="output_vectors.RData")
# load library
library(ProbKMA.package)
# set seed
seed = 123
set.seed(seed)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 201
c_max = 71
K = 3
c = 41
# load previous R implementation source file
# warning: for comparing the results reload all the data and clean the envir
source(file = "../probKMA-FMD_functions.r")
true_output = probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
load("C:/Users/buldo/OneDrive/Desktop/progetto pacs/probKMA/ProbKMA-FMD/Functional_motif_discovery_example/output_vectors.RData")
true_output$BC_dist_iter - output_vectors$BC_dist_iter
# load library
library(ProbKMA.package)
# set seed
seed = 123
set.seed(seed)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 201
c_max = 71
K = 3
c = 61
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
# load library
library(ProbKMA.package)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 201
c_max = 71
K = 3
c = 61
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
# load library
library(ProbKMA.package)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 201
c_max = 71
K = 3
c = 61
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 201
c_max = 71
K = 3
c = 41
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
# load library
library(ProbKMA.package)
# set seed
seed = 123
set.seed(seed)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 201
c_max = 71
K = 3
c = 41
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
save(my_output,file="my_output.RData")
# load library
library(ProbKMA.package)
# set seed
seed = 123
set.seed(seed)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 201
c_max = 71
K = 3
c = 41
# load previous R implementation source file
# warning: for comparing the results reload all the data and clean the envir
source(file = "../probKMA-FMD_functions.r")
true_output = probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=NULL,S0=NULL,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
load("C:/Users/buldo/OneDrive/Desktop/progetto pacs/probKMA/ProbKMA-FMD/Functional_motif_discovery_example/my_output.RData")
true_output$BC_dist_iter - my_output$BC_dist_iter
load("C:/Users/buldo/OneDrive/Desktop/progetto pacs/probKMA/ProbKMA-FMD/Functional_motif_discovery_example/initial_matrix10.RData")
# load library
library(ProbKMA.package)
# set seed
seed = 123
set.seed(seed)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 201
c_max = 71
c = 51
K = 3
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=P0,S0=S0,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
load("C:/Users/buldo/OneDrive/Desktop/progetto pacs/probKMA/ProbKMA-FMD/Functional_motif_discovery_example/initial_matrix10.RData")
# load library
library(ProbKMA.package)
# set seed
seed = 123
set.seed(seed)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 201
c_max = 71
K = 3
c = 51
P0 = NULL
S0 = NULL
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=P0,S0=S0,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=P0,S0=S0,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
# load library
library(ProbKMA.package)
# set seed
seed = 123
set.seed(seed)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 201
c_max = 71
K = 3
c = 61
P0 = NULL
S0 = NULL
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=P0,S0=S0,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
# load library
library(ProbKMA.package)
# set seed
seed = 123
set.seed(seed)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 201
c_max = 80
K = 3
c = 61
P0 = NULL
S0 = NULL
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=P0,S0=S0,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 201
c_max = 90
K = 3
c = 61
P0 = NULL
S0 = NULL
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=P0,S0=S0,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 201
c_max = 90
K = 3
c = 41
P0 = NULL
S0 = NULL
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=P0,S0=S0,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
View(my_output)
# load library
library(ProbKMA.package)
# set seed
seed = 123
set.seed(seed)
# load data
data(sim_clusters)
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0
trials_elong = 301
c_max = 90
K = 3
c = 41
P0 = NULL
S0 = NULL
my_output = ProbKMA.package::probKMA(Y0,Y1,standardize=TRUE,K=K,c=c,c_max=c_max,P0=P0,S0=S0,
diss=diss,alpha=alpha,w=1,m=2,
iter_max=1000,stop_criterion='max',quantile=NULL,tol=1e-8,
iter4elong=1,tol4elong=1e-3,max_elong=0.5,trials_elong=trials_elong,
deltaJk_elong=0.05,max_gap=max_gap,
iter4clean=50,tol4clean=1e-4,quantile4clean=1/K,
return_options=TRUE,return_init=TRUE,worker_number=NULL)
View(my_output)
rowSums(my_output$P)
# Set working directory to the folder of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load the package
library(ProbKMA.package)
set.seed(123)
#load(paste0('len200_sd0.1.RData'))
data(sim_clusters)
# use Sobolev-like distance d_0.5
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0 # no gaps allowed
iter4elong = 1 # perform elongation
trials_elong = 201 # try all possible elongations
c_max = 71 # maximum motif length 70
### run probKMA multiple times (2x3x10=60 times)
K = c(2, 3) # number of clusters to try
c = c(61, 51, 41) # minimum motif lengths to try
n_init = 10 # number of random initializations to try
# find candidate motifs
find_candidate_motifs_results = ProbKMA.package::find_candidate_motifs(Y0, Y1, K, c, n_init,
name = './results/len200_sd0.1', names_var = 'x(t)',
probKMA_options = list(c_max = c_max, standardize = FALSE, iter_max = 1000,
iter4elong = iter4elong, trials_elong = trials_elong, max_gap = max_gap,
return_options = TRUE, return_init = TRUE,
diss = diss, alpha = alpha),
plot = TRUE) # ,worker_number
gc()
gc()
# Set working directory to the folder of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load the package
library(ProbKMA.package)
set.seed(123)
#load(paste0('len200_sd0.1.RData'))
data(sim_clusters)
# use Sobolev-like distance d_0.5
diss = 'd0_d1_L2'
alpha = 0.5
max_gap = 0 # no gaps allowed
iter4elong = 1 # perform elongation
trials_elong = 201 # try all possible elongations
c_max = 71 # maximum motif length 70
### run probKMA multiple times (2x3x10=60 times)
K = c(2, 3) # number of clusters to try
c = c(61, 51, 41) # minimum motif lengths to try
n_init = 10 # number of random initializations to try
files = list.files('./results')
# find candidate motifs
find_candidate_motifs_results = ProbKMA.package::find_candidate_motifs(Y0, Y1, K, c, n_init,
name = './results/len200_sd0.1', names_var = 'x(t)',
probKMA_options = list(c_max = c_max, standardize = FALSE, iter_max = 1000,
iter4elong = iter4elong, trials_elong = trials_elong, max_gap = max_gap,
return_options = TRUE, return_init = TRUE,
diss = diss, alpha = alpha),
plot = TRUE) # ,worker_number
warnings()
