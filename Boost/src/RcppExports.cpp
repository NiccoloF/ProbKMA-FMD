// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mapply_custom
List mapply_custom(Function fun, List args, bool simplify, bool use_names);
RcppExport SEXP _Boost_mapply_custom(SEXP funSEXP, SEXP argsSEXP, SEXP simplifySEXP, SEXP use_namesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Function >::type fun(funSEXP);
    Rcpp::traits::input_parameter< List >::type args(argsSEXP);
    Rcpp::traits::input_parameter< bool >::type simplify(simplifySEXP);
    Rcpp::traits::input_parameter< bool >::type use_names(use_namesSEXP);
    rcpp_result_gen = Rcpp::wrap(mapply_custom(fun, args, simplify, use_names));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Boost_mapply_custom", (DL_FUNC) &_Boost_mapply_custom, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_Boost(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
